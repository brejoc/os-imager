---
kind: pipeline
name: Lint

platform:
  os: linux
  arch: amd64

steps:
- name: CentOS 7
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --validate --distro=centos --distro-version=7
  depends_on:
  - clone

---
kind: pipeline
name: CentOS 7

platform:
  os: linux
  arch: amd64

steps:
- name: slave-image
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed openssh-client py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - "echo \"$SSHKEY\" > sre-jenkins-key"
  - "echo \"$GPGKEY\" > gpgkey.asc"
  - chmod 600 sre-jenkins-key gpgkey.asc
  - "ssh-keyscan -t rsa github.com | ssh-keygen -lf -"
  - mkdir ~/.ssh
  - chmod 700 ~/.ssh
  - "ssh-keyscan -H github.com >> ~/.ssh/known_hosts"
  - inv build-aws --distro=centos --distro-version=7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
    GPGKEY:
      from_secret: gpgkey
    SSHKEY:
      from_secret: sshkey
  depends_on:
  - clone

- name: delete-old-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)\" | jq 'del(.[-1])' > ami-details.txt\ncat ami-details.txt | jq -r '.[].ImageId' > amis-to-delete.txt\ncat ami-details.txt | jq -r \".[].BlockDeviceMappings[].Ebs.SnapshotId\" > snapshots-to-delete.txt\ncat amis-to-delete.txt\ncat snapshots-to-delete.txt\n"
  - "for ami in $(head -n -2 amis-to-delete.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami || echo \"Failed to delete AMI $ami\"\ndone\nfor ami_snapshot in $(head -n -2 snapshots-to-delete.txt); do\n  echo \"Deleting snapshot $ami_snapshot\"\n  aws ec2 --region $AWS_DEFAULT_REGION delete-snapshot --snapshot-id $ami_snapshot || echo \"Failed to delete AMI snapshot $ami_snapshot\"\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - slave-image

trigger:
  event:
  - tag
  ref:
  - "refs/tags/aws-jenkins-slave-v1.*"

depends_on:
- Lint

---
kind: pipeline
name: CentOS 7 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: slave-image
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed openssh-client py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - "echo \"$SSHKEY\" > sre-jenkins-key"
  - "echo \"$GPGKEY\" > gpgkey.asc"
  - chmod 600 sre-jenkins-key gpgkey.asc
  - "ssh-keyscan -t rsa github.com | ssh-keygen -lf -"
  - mkdir ~/.ssh
  - chmod 700 ~/.ssh
  - "ssh-keyscan -H github.com >> ~/.ssh/known_hosts"
  - inv build-aws --staging --distro=centos --distro-version=7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
    GPGKEY:
      from_secret: gpgkey
    SSHKEY:
      from_secret: sshkey
  depends_on:
  - clone

- name: delete-old-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)\" | jq 'del(.[-1])' > ami-details.txt\ncat ami-details.txt | jq -r '.[].ImageId' > amis-to-delete.txt\ncat ami-details.txt | jq -r \".[].BlockDeviceMappings[].Ebs.SnapshotId\" > snapshots-to-delete.txt\ncat amis-to-delete.txt\ncat snapshots-to-delete.txt\n"
  - "for ami in $(head -n -0 amis-to-delete.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami || echo \"Failed to delete AMI $ami\"\ndone\nfor ami_snapshot in $(head -n -0 snapshots-to-delete.txt); do\n  echo \"Deleting snapshot $ami_snapshot\"\n  aws ec2 --region $AWS_DEFAULT_REGION delete-snapshot --snapshot-id $ami_snapshot || echo \"Failed to delete AMI snapshot $ami_snapshot\"\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - slave-image

trigger:
  branch:
  - jenkins-slaves
  event:
  - push

depends_on:
- Lint

---
kind: signature
hmac: dfc590a360e2ec1b1d836cca5f38b756b643066c20d3ab26a9c20b9c593ac89f

...
