---
kind: pipeline
name: Lint

platform:
  os: linux
  arch: amd64

steps:
- name: Arch
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - python3 -m ensurepip
  - "rm -r /usr/lib/python*/ensurepip"
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --validate --distro=arch --distro-version=2019-01-09
  depends_on:
  - clone

- name: Amazon 1
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - python3 -m ensurepip
  - "rm -r /usr/lib/python*/ensurepip"
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --validate --distro=amazon --distro-version=1
  depends_on:
  - clone

- name: Amazon 2
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - python3 -m ensurepip
  - "rm -r /usr/lib/python*/ensurepip"
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --validate --distro=amazon --distro-version=2
  depends_on:
  - clone

- name: CentOS 6
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - python3 -m ensurepip
  - "rm -r /usr/lib/python*/ensurepip"
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --validate --distro=centos --distro-version=6
  depends_on:
  - clone

- name: CentOS 7
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - python3 -m ensurepip
  - "rm -r /usr/lib/python*/ensurepip"
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --validate --distro=centos --distro-version=7
  depends_on:
  - clone

- name: Debian 8
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - python3 -m ensurepip
  - "rm -r /usr/lib/python*/ensurepip"
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --validate --distro=debian --distro-version=8
  depends_on:
  - clone

- name: Debian 9
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - python3 -m ensurepip
  - "rm -r /usr/lib/python*/ensurepip"
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --validate --distro=debian --distro-version=9
  depends_on:
  - clone

- name: Fedora 29
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - python3 -m ensurepip
  - "rm -r /usr/lib/python*/ensurepip"
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --validate --distro=fedora --distro-version=29
  depends_on:
  - clone

- name: Fedora 30
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - python3 -m ensurepip
  - "rm -r /usr/lib/python*/ensurepip"
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --validate --distro=fedora --distro-version=30
  depends_on:
  - clone

- name: Opensuse 15
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - python3 -m ensurepip
  - "rm -r /usr/lib/python*/ensurepip"
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --validate --distro=opensuse --distro-version=15
  depends_on:
  - clone

- name: Ubuntu 1604
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - python3 -m ensurepip
  - "rm -r /usr/lib/python*/ensurepip"
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --validate --distro=ubuntu --distro-version=1604
  depends_on:
  - clone

- name: Ubuntu 1804
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - python3 -m ensurepip
  - "rm -r /usr/lib/python*/ensurepip"
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --validate --distro=ubuntu --distro-version=1804
  depends_on:
  - clone

- name: Windows 2012r2
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - python3 -m ensurepip
  - "rm -r /usr/lib/python*/ensurepip"
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --validate --distro=windows --distro-version=2012r2
  depends_on:
  - clone

- name: Windows 2016
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - python3 -m ensurepip
  - "rm -r /usr/lib/python*/ensurepip"
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --validate --distro=windows --distro-version=2016
  depends_on:
  - clone

- name: Windows 2019
  image: hashicorp/packer
  commands:
  - apk --no-cache add --update python3
  - python3 -m ensurepip
  - "rm -r /usr/lib/python*/ensurepip"
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --validate --distro=windows --distro-version=2019
  depends_on:
  - clone

---
kind: pipeline
name: Arch

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 35 seconds; sleep 35'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=arch --distro-version=2019-01-09 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=arch --distro-version=2019-01-09 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=arch --distro-version=2019-01-09 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=arch --distro-version=2019-01-09 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=arch --distro-version=2019-01-09 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  event:
  - tag
  ref:
  - "refs/tags/aws-ci-v1.*"

depends_on:
- Lint

---
kind: pipeline
name: Amazon 1

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 70 seconds; sleep 70'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=amazon --distro-version=1 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=amazon --distro-version=1 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=amazon --distro-version=1 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=amazon --distro-version=1 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=amazon --distro-version=1 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  event:
  - tag
  ref:
  - "refs/tags/aws-ci-v1.*"

depends_on:
- Lint

---
kind: pipeline
name: Amazon 2

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 105 seconds; sleep 105'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=amazon --distro-version=2 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=amazon --distro-version=2 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=amazon --distro-version=2 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=amazon --distro-version=2 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=amazon --distro-version=2 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  event:
  - tag
  ref:
  - "refs/tags/aws-ci-v1.*"

depends_on:
- Lint

---
kind: pipeline
name: CentOS 6

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 140 seconds; sleep 140'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=centos --distro-version=6 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=centos --distro-version=6 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=centos --distro-version=6 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=centos --distro-version=6 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=centos --distro-version=6 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  event:
  - tag
  ref:
  - "refs/tags/aws-ci-v1.*"

depends_on:
- Lint

---
kind: pipeline
name: CentOS 7

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 175 seconds; sleep 175'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=centos --distro-version=7 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=centos --distro-version=7 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=centos --distro-version=7 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=centos --distro-version=7 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=centos --distro-version=7 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  event:
  - tag
  ref:
  - "refs/tags/aws-ci-v1.*"

depends_on:
- Lint

---
kind: pipeline
name: Debian 8

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 210 seconds; sleep 210'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=debian --distro-version=8 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=debian --distro-version=8 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=debian --distro-version=8 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=debian --distro-version=8 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=debian --distro-version=8 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  event:
  - tag
  ref:
  - "refs/tags/aws-ci-v1.*"

depends_on:
- Lint

---
kind: pipeline
name: Debian 9

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 245 seconds; sleep 245'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=debian --distro-version=9 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=debian --distro-version=9 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=debian --distro-version=9 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=debian --distro-version=9 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=debian --distro-version=9 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  event:
  - tag
  ref:
  - "refs/tags/aws-ci-v1.*"

depends_on:
- Lint

---
kind: pipeline
name: Fedora 29

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 280 seconds; sleep 280'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=fedora --distro-version=29 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=fedora --distro-version=29 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=fedora --distro-version=29 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=fedora --distro-version=29 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=fedora --distro-version=29 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  event:
  - tag
  ref:
  - "refs/tags/aws-ci-v1.*"

depends_on:
- Lint

---
kind: pipeline
name: Fedora 30

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 315 seconds; sleep 315'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=fedora --distro-version=30 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=fedora --distro-version=30 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=fedora --distro-version=30 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=fedora --distro-version=30 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=fedora --distro-version=30 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  event:
  - tag
  ref:
  - "refs/tags/aws-ci-v1.*"

depends_on:
- Lint

---
kind: pipeline
name: Opensuse 15

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 350 seconds; sleep 350'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=opensuse --distro-version=15 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=opensuse --distro-version=15 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=opensuse --distro-version=15 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=opensuse --distro-version=15 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=opensuse --distro-version=15 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  event:
  - tag
  ref:
  - "refs/tags/aws-ci-v1.*"

depends_on:
- Lint

---
kind: pipeline
name: Ubuntu 1604

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 455 seconds; sleep 455'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=ubuntu --distro-version=1604 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=ubuntu --distro-version=1604 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=ubuntu --distro-version=1604 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=ubuntu --distro-version=1604 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=ubuntu --distro-version=1604 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  event:
  - tag
  ref:
  - "refs/tags/aws-ci-v1.*"

depends_on:
- Lint

---
kind: pipeline
name: Ubuntu 1804

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 490 seconds; sleep 490'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=ubuntu --distro-version=1804 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=ubuntu --distro-version=1804 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=ubuntu --distro-version=1804 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=ubuntu --distro-version=1804 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=ubuntu --distro-version=1804 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  event:
  - tag
  ref:
  - "refs/tags/aws-ci-v1.*"

depends_on:
- Lint

---
kind: pipeline
name: Windows 2012r2

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 0 seconds; sleep 0'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=windows --distro-version=2012r2 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=windows --distro-version=2012r2 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=windows --distro-version=2012r2 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=windows --distro-version=2012r2 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=windows --distro-version=2012r2 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  event:
  - tag
  ref:
  - "refs/tags/aws-ci-v1.*"

depends_on:
- Lint

---
kind: pipeline
name: Windows 2016

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 0 seconds; sleep 0'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=windows --distro-version=2016 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=windows --distro-version=2016 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=windows --distro-version=2016 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=windows --distro-version=2016 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=windows --distro-version=2016 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  event:
  - tag
  ref:
  - "refs/tags/aws-ci-v1.*"

depends_on:
- Lint

---
kind: pipeline
name: Windows 2019

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 0 seconds; sleep 0'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=windows --distro-version=2019 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=windows --distro-version=2019 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=windows --distro-version=2019 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=windows --distro-version=2019 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --distro=windows --distro-version=2019 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -1 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  event:
  - tag
  ref:
  - "refs/tags/aws-ci-v1.*"

depends_on:
- Lint

---
kind: pipeline
name: Arch (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 35 seconds; sleep 35'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=arch --distro-version=2019-01-09 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=arch --distro-version=2019-01-09 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=arch --distro-version=2019-01-09 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=arch --distro-version=2019-01-09 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=arch --distro-version=2019-01-09 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Amazon 1 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 70 seconds; sleep 70'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=1 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=1 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=1 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=1 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=1 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Amazon 2 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 105 seconds; sleep 105'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=2 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=2 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=2 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=2 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=amazon --distro-version=2 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: CentOS 6 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 140 seconds; sleep 140'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=6 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=6 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=6 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=6 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=6 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: CentOS 7 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 175 seconds; sleep 175'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=7 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=7 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=7 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=7 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=centos --distro-version=7 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Debian 8 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 210 seconds; sleep 210'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=8 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=8 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=8 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=8 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=8 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Debian 9 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 245 seconds; sleep 245'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=9 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=9 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=9 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=9 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=debian --distro-version=9 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Fedora 29 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 280 seconds; sleep 280'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=29 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=29 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=29 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=29 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=29 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Fedora 30 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 315 seconds; sleep 315'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=30 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=30 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=30 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=30 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=fedora --distro-version=30 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Opensuse 15 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 350 seconds; sleep 350'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=opensuse --distro-version=15 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=opensuse --distro-version=15 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=opensuse --distro-version=15 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=opensuse --distro-version=15 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=opensuse --distro-version=15 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Ubuntu 1604 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 455 seconds; sleep 455'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1604 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1604 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1604 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1604 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1604 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Ubuntu 1804 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 490 seconds; sleep 490'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1804 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1804 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1804 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1804 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=ubuntu --distro-version=1804 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Windows 2012r2 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 0 seconds; sleep 0'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2012r2 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2012r2 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2012r2 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2012r2 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2012r2 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Windows 2016 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 0 seconds; sleep 0'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2016 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2016 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2016 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2016 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2016 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: pipeline
name: Windows 2019 (Staging)

platform:
  os: linux
  arch: amd64

steps:
- name: throttle-build
  image: alpine
  commands:
  - "sh -c 'echo Sleeping 0 seconds; sleep 0'"

- name: 2017.7
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2019 --salt-branch=2017.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2018.3
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2019 --salt-branch=2018.3
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: 2019.2
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2019 --salt-branch=2019.2
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: neon
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2019 --salt-branch=neon
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: develop
  image: hashicorp/packer
  commands:
  - apk --no-cache add make curl grep gawk sed
  - apk --no-cache add --update py3-pip
  - pip3 install --upgrade pip setuptools
  - pip3 install invoke
  - inv build-aws --staging --distro=windows --distro-version=2019 --salt-branch=develop
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - throttle-build

- name: delete-old-2017.7-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2017.7

- name: delete-old-2018.3-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2018.3

- name: delete-old-2019.2-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - 2019.2

- name: delete-old-neon-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - neon

- name: delete-old-develop-amis
  image: alpine
  commands:
  - apk --no-cache add --update py3-pip jq
  - pip3 install --upgrade pip setuptools
  - pip3 install awscli
  - "ami_filter=$(cat manifest.json | jq -r '.builds[].custom_data.ami_name')\necho \"AMI FILTER: $ami_filter\"\naws ec2 --region $AWS_DEFAULT_REGION describe-images --filters \"Name=name,Values=$ami_filter/*\" --query \"sort_by(Images, &CreationDate)[].ImageId\" | jq 'del(.[-1])' | jq -r \".[]\" > amis.txt\ncat amis.txt\n"
  - "for ami in $(head -n -0 amis.txt); do\n  echo \"Deleting AMI $ami\"\n  aws ec2 --region $AWS_DEFAULT_REGION deregister-image --image-id $ami\ndone\n"
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: username
    AWS_DEFAULT_REGION: us-west-2
    AWS_SECRET_ACCESS_KEY:
      from_secret: password
  depends_on:
  - develop

trigger:
  branch:
  - ci
  event:
  - push

depends_on:
- Lint

---
kind: signature
hmac: eeb29aa557becbdd0e66ea35d0e68d6b42724fafe05b812bfd064085fcbfe882

...
